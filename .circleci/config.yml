version: 2.1

jobs:
  build-linux:
    docker:
      - image: clux/muslrust:1.35.0-stable
    steps:
      - checkout
      - restore_cache:
          key: linux-{{ checksum "Cargo.lock" }}
      - run:
          name: patch crate version
          command: |
            if [[ -n "$CIRCLE_TAG" ]]; then
              version=$(echo "$CIRCLE_TAG" | sed -e 's/^v//')
              sed -i -e "s/version = \"0.1.0\"/version = \"$version\"/" Cargo.toml

              cargo update -p woodchipper
            fi
      - run:
          name: Build static linux x86_64
          command: cargo build --release --locked
      - save_cache:
          key: linux-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
      - run:
          name: Copy artifacts
          command: |
            mkdir ./artifacts
            cp target/x86_64-unknown-linux-musl/release/woodchipper ./artifacts/woodchipper-x86_64-unknown-linux-musl
      - persist_to_workspace:
          root: ./artifacts
          paths:
            - woodchipper-x86_64-unknown-linux-musl

  build-windows:
    docker:
      - image: rust:1.35-slim
    
    steps:
      - checkout
      - restore_cache:
          key: windows-{{ checksum "Cargo.lock" }}
      - run:
          name: Install mingw and windows build target
          command: |
            set -ex

            apt-get update
            apt-get install -y gcc-mingw-w64 mingw-w64

            rustup target add x86_64-pc-windows-gnu
            cat "misc/cargo-conf-mingw.toml" >> $CARGO_HOME/config
      - run:
          name: patch crate version
          command: |
            if [[ -n "$CIRCLE_TAG" ]]; then
              version=$(echo "$CIRCLE_TAG" | sed -e 's/^v//')
              sed -i -e "s/version = \"0.1.0\"/version = \"$version\"/" Cargo.toml

              cargo update -p woodchipper
            fi
      - run:
          name: Build windows x86_64
          command: |
            cargo build --release --target=x86_64-pc-windows-gnu --locked
      - save_cache:
          key: windows-{{ checksum "Cargo.lock" }}
          paths:
            - "./target"
      - run:
          name: Copy artifacts
          command: |
            mkdir ./artifacts
            cp target/x86_64-pc-windows-gnu/release/woodchipper.exe ./artifacts/woodchipper-x86_64-pc-windows-gnu.exe
      - persist_to_workspace:
          root: ./artifacts
          paths:
            - woodchipper-x86_64-pc-windows-gnu.exe

  publish:
    docker:
      - image: alpine:3.9
    steps:
      - run: 
          name: add publish dependencies
          command: apk add ca-certificates tar curl
      - attach_workspace:
          at: ./artifacts
      - run:
          name: fetch ghr
          command: |
            set -x
            ghr_url="https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz"

            cd /usr/local/bin/
            curl -SsLf "$ghr_url" | tar zxvf - --strip=1 --wildcards 'ghr_*/ghr'
      - run:
          name: publish GitHub release
          command: |
            echo "${CIRCLE_TAG}" > ./artifacts/version
            ghr -u HewlettPackard -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace ${CIRCLE_TAG} ./artifacts/
  publish-cargo:
    docker:
      - image: rust:1.35-slim
    steps:
      - checkout
      - run:
          name: install build dependencies
          command: |
            apt-get update
            apt-get install -y xorg-dev python3 libxcb-shape0-dev libxcb-xfixes0-dev libxcb-render0-dev libssl-dev
      - run:
          name: patch crate version
          command: |
            version=$(echo "$CIRCLE_TAG" | sed -e 's/^v//')
            sed -i -e "s/version = \"0.1.0\"/version = \"$version\"/" Cargo.toml

            cargo update -p woodchipper
      - run:
          name: cargo publish
          command: cargo publish --allow-dirty --locked
workflows:
  version: 2
  build-and-publish:
    jobs:
      - build-linux:
          filters:
            tags:
              only: /.*/
      - build-windows:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build-linux
            - build-windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - publish-cargo:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
